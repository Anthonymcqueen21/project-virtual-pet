"use strict";(self.webpackChunktu_cis_4398_docs_template=self.webpackChunktu_cis_4398_docs_template||[]).push([[8632],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(n),d=i,f=u["".concat(l,".").concat(d)]||u[d]||m[d]||r;return n?a.createElement(f,s(s({ref:t},c),{},{components:n})):a.createElement(f,s({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,s=new Array(r);s[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[u]="string"==typeof e?e:i,s[1]=o;for(var p=2;p<r;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1809:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var a=n(7462),i=(n(7294),n(3905));const r={sidebar_position:5,description:"Canvas endpoints necessary to retrieve the information we need from a user's Canvas account."},s="Canvas API Specs",o={unversionedId:"api-specification/canvas-endpoints",id:"api-specification/canvas-endpoints",title:"Canvas API Specs",description:"Canvas endpoints necessary to retrieve the information we need from a user's Canvas account.",source:"@site/docs/api-specification/canvas-endpoints.md",sourceDirName:"api-specification",slug:"/api-specification/canvas-endpoints",permalink:"/project-virtual-pet/docs/api-specification/canvas-endpoints",draft:!1,editUrl:"https://github.com/Capstone-Projects-2023-Spring/project-virtual-pet/edit/main/documentation/docs/api-specification/canvas-endpoints.md",tags:[],version:"current",lastUpdatedBy:"Katrina Janeczko",sidebarPosition:5,frontMatter:{sidebar_position:5,description:"Canvas endpoints necessary to retrieve the information we need from a user's Canvas account."},sidebar:"docsSidebar",previous:{title:"CalculatorModel.java",permalink:"/project-virtual-pet/docs/api-specification/calculator-model-generated"},next:{title:"Test Procedures",permalink:"/project-virtual-pet/docs/category/test-procedures"}},l={},p=[{value:"Notes:",id:"notes",level:2},{value:"Example",id:"example",level:2},{value:"Action",id:"action",level:3},{value:"Endpoints",id:"endpoints",level:2},{value:"List your courses",id:"list-your-courses",level:3},{value:"List assignments",id:"list-assignments",level:3}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"canvas-api-specs"},"Canvas API Specs"),(0,i.kt)("h2",{id:"notes"},"Notes:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Base URL: ",(0,i.kt)("inlineCode",{parentName:"li"},"https://templeu.instructure.com")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://canvas.instructure.com/doc/api/file.pagination.html"},"Pagination"),": Requests that return multiple items will be paginated to 10 items by default. You can set a custom per-page amount with the ?per_page parameter. There is an unspecified limit to how big you can set per_page to.")),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("h3",{id:"action"},"Action"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"request"),": Description"),(0,i.kt)("li",{parentName:"ul"},"Parameters: ",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"type parameter1 --\x3e description of parameter"))),(0,i.kt)("li",{parentName:"ul"},"Example: ",(0,i.kt)("inlineCode",{parentName:"li"},"The request Katrina tried with her own Canvas account & Postman and it worked")),(0,i.kt)("li",{parentName:"ul"},"Returns:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"the relevent fields we'll want to collect and store from this call")))),(0,i.kt)("h2",{id:"endpoints"},"Endpoints"),(0,i.kt)("h3",{id:"list-your-courses"},(0,i.kt)("a",{parentName:"h3",href:"https://canvas.instructure.com/doc/api/courses.html#method.courses.index"},"List your courses")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"GET /api/v1/courses"),": Retrieve a paginated list of courses in this account."),(0,i.kt)("li",{parentName:"ul"},"Parameters:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"string ",(0,i.kt)("inlineCode",{parentName:"li"},"enrollment_state")," --\x3e return courses where the user has an enrollment with the given state (",(0,i.kt)("inlineCode",{parentName:"li"},"active"),")"))),(0,i.kt)("li",{parentName:"ul"},"Example: ",(0,i.kt)("inlineCode",{parentName:"li"},"GET https://templeu.instructure.com/api/v1/courses/?enrollment_state=active&per_page=100"))),(0,i.kt)("h3",{id:"list-assignments"},(0,i.kt)("a",{parentName:"h3",href:"https://canvas.instructure.com/doc/api/assignments.html#method.assignments_api.index"},"List assignments")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"GET /api/v1/courses/:course_id/assignments"),": Returns the paginated list of assignments for the current course or assignment group."),(0,i.kt)("li",{parentName:"ul"},"Parameters:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"string ",(0,i.kt)("inlineCode",{parentName:"li"},"include")," submission --\x3e the user's current submission for each assignment (which holds score)"))),(0,i.kt)("li",{parentName:"ul"},"Example: ",(0,i.kt)("inlineCode",{parentName:"li"},"https://templeu.instructure.com/api/v1/courses/124235/assignments?per_page=100&include=submission")),(0,i.kt)("li",{parentName:"ul"},"Returns:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},'integer "id" --\x3e assignment id'),(0,i.kt)("li",{parentName:"ul"},'string "description" --\x3e description of assignment'),(0,i.kt)("li",{parentName:"ul"},'string "due_at" --\x3e date/time in ISO 8601 format for due date of assignment'),(0,i.kt)("li",{parentName:"ul"},'integer "points_possible"'),(0,i.kt)("li",{parentName:"ul"},'string "name" --\x3e assignment name'),(0,i.kt)("li",{parentName:"ul"},'boolean "is_quiz_assignment" --\x3e tells you whether it\'s an Assignment or a Quiz'),(0,i.kt)("li",{parentName:"ul"},'integer "course_id" --\x3e the associated course that this is from (which we needed to get here anyway)'),(0,i.kt)("li",{parentName:"ul"},'"submission": ',(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},'integer "score"'),(0,i.kt)("li",{parentName:"ul"},'boolean "late"'),(0,i.kt)("li",{parentName:"ul"},'string "workflow_state" --\x3e such as "graded", "submitted", "unsubmitted"')))))))}u.isMDXComponent=!0}}]);